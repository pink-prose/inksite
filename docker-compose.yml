# Docker compose setup for the app, suitable for development only.

services:
  questarch:
    build: .
    container_name: questarch
    networks:
      - main_network
    ports:
      - "3000:3000" # server
      - "3001:3001" # live reload
    tty: true # for terminal colors
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      LEPTOS_TAILWIND_VERSION: "v4.0.7"
      SMTP_URL: "smtp://mailpit:1025"
      VALKEY_URL: "valkey://valkey:6379"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
      mailpit:
        condition: service_healthy
    volumes:
      - ./docker/site:/app/site
      - ./docker/target:/app/target
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore: # .dockerignore paths ignored already
            - Cargo.toml
        - action: sync+restart
          path: ./Cargo.toml
          target: /app/Cargo.toml

  valkey:
    container_name: valkey
    image: valkey/valkey:8
    networks:
      - main_network
    volumes:
      - ./docker/data/valkey:/data
    ports:
      - 6379:6379
    environment:
      VALKEY_EXTRA_FLAGS: "--appendonly yes"
    restart: always
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 20s
      timeout: 3s
      retries: 20

  postgres:
    build: docker/postgres
    container_name: postgres
    command: -c config_file=/etc/postgresql.conf
    networks:
      - main_network
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker/data/postgres:/var/lib/postgresql/data
      - ./docker/postgres/postgresql.conf:/etc/postgresql.conf
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname=$${POSTGRES_DB} --username=$${POSTGRES_USER}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 5s

  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    networks:
      - main_network
    restart: unless-stopped
    volumes:
      - ./docker/data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1025"]
      interval: 2s
      timeout: 1s
      retries: 50

networks:
  main_network:
